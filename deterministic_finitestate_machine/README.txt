Лопарёв Влад, КНМО-101
===Постановка задачи===
Дана строка S длины n и строка T длины m.
Символы строк нумеруются начиная с 1.
Требуется найти все вхождения строки T в строку S, используя конечный детерминированный автомат.

Ввод строк S и T происходит через файл input.txt
(или любой другой текстовый файл в текущем каталоге).
В первой строке вводится S, во второй - T.
При запуске программы необходимо в качестве аргумента командной строки передать имя этого файла.


===Пример работы при S = колокольчик и колокол, T = колокол===
PS C:\js\deterministic_finitestate_machine> node .\machine.js input.txt
ВЫВОД: [ 0, 14 ]

Вычислительная сложность алгоритма поиска подстроки длиной m в строке длиной n с использованием
конечного детерминированного автомата = O(n).

===Алгоритм работы===
По строке T строятся алфавит, таблица переходов.

Алфавит = ["к", "о", "л"]
Таблица переходов
  к о л
1|1 0 0 
2|1 2 0 
3|1 0 3
4|1 4 0
5|5 0 0
6|1 6 0
7|1 0 7
8|1 4 0

Пошаговая работа алгоритма поиска
Прочитал   Перешёл
к          1
о          2
л          3
о          4
к          5
о          6
л          7
Найдено вхождение на позиции  0
ь          0
ч          0
и          0
к          1
           0
и          0
           0
к          1
о          2
л          3
о          4
к          5
о          6
л          7
Найдено вхождение на позиции  14
           0
Вхождения: [ 0, 14 ]
